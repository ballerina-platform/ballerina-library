name: Build (Connector)

on:
  workflow_call:
    inputs:
      repo-name:
        required: true
        type: string
      additional-build-flags:
        required: false
        type: string
        default: ""
      additional-test-flags:
        required: false
        type: string
        default: ""
      publish-required:
        required: false
        type: boolean
        default: false


jobs:
    ubuntu-build:
        name: Build
        runs-on: ubuntu-latest
        concurrency:
          group: ${{ github.head_ref }}-ubuntu-build
          cancel-in-progress: true
        steps:
            -   name: Checkout Repository
                uses: actions/checkout@v3

            - name: Get Ballerina Version
              run: |
                BAL_VERSION=$(grep -w 'ballerinaLangVersion' gradle.properties | cut -d= -f2 | rev | cut --complement -d- -f1 | rev)
                if [ -z "$BAL_VERSION" ]; then
                  BAL_VERSION="latest"
                fi
                echo "BAL_VERSION=$BAL_VERSION" >> $GITHUB_ENV
                echo "Ballerina Version: $BAL_VERSION"

            - name: Set Up Ballerina
              uses: ballerina-platform/setup-ballerina@v1.1.0
              with:
                version: ${{ env.BAL_VERSION }}

            -   name: Set up JDK 21
                uses: actions/setup-java@v3
                with:
                    distribution: 'temurin'
                    java-version: 21.0.3

            -   name: Change to Timestamped Version
                if: ${{ inputs.publish-required == true }}
                run: |
                  startTime=$(TZ="Asia/Kolkata" date +'%Y%m%d-%H%M00')
                  latestCommit=$(git log -n 1 --pretty=format:"%h")
                  VERSION=$((grep -w 'version' | cut -d= -f2) < gradle.properties | rev | cut --complement -d- -f1 | rev)
                  updatedVersion=$VERSION-$startTime-$latestCommit
                  echo $updatedVersion
                  sed -i "s/version=\(.*\)/version=$updatedVersion/g" gradle.properties

            -   name: Set ENV Variables
                run: |
                  echo -e '${{ toJson(secrets) }}' | jq -r 'to_entries[] | .key + "=" + .value' >> $GITHUB_ENV

            -   name: Build the Package
                env:
                    packageUser: ${{ github.actor }}
                    packagePAT: ${{ secrets.GITHUB_TOKEN }}
                run: |
                  ./gradlew build -x test ${{ inputs.additional-build-flags }}
                  ./gradlew test ${{ inputs.additional-test-flags }}

            - name: Generate CodeCov Report
              uses: codecov/codecov-action@v5
              with:
                token: ${{ secrets.CODECOV_TOKEN }}
                slug: ballerina-platform/${{ github.event.repository.name }}

            -   name: Publish Connector
                if: ${{ inputs.publish-required == true }}
                env:
                  packageUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
                  packagePAT: ${{ secrets.BALLERINA_BOT_TOKEN }}
                  publishUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
                  publishPAT: ${{ secrets.BALLERINA_BOT_TOKEN }}
                run: ./gradlew publish --no-daemon --scan ${{ inputs.additional-build-flags }}

            # Send notification when build fails
            - name: Alert notifier on failure
              if: failure() && (github.event.action == 'check_connector_for_breaking_changes')
              run: |
                curl -X POST \
                'https://api.github.com/repos/ballerina-platform/ballerina-release/dispatches' \
                --header 'Accept: application/vnd.github.v3+json' \
                --header 'Authorization: Bearer ${{ secrets.BALLERINA_BOT_TOKEN }}' \
                --data-raw '{
                  "event_type": "notify-ballerinax-connector-build-failure",
                  "client_payload": {
                    "repoName": "${{ inputs.repo-name }}",
                    "workflow": "CI"
                  }
                }'
