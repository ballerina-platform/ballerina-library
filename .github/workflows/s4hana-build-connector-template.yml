name: Build (S/4 HANA Connector)

on:
  workflow_call:
    inputs:
      hana-connector-group:
        required: true
        type: string

jobs:
  build-examples:
    name: Build Examples
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get Ballerina Version
        run: |
          BAL_VERSION=$(grep -w 'ballerinaLangVersion' gradle.properties | cut -d= -f2 | rev | cut --complement -d- -f1 | rev)
          if [ -z "$BAL_VERSION" ]; then
            BAL_VERSION="latest"
          fi
          echo "BAL_VERSION=$BAL_VERSION" >> $GITHUB_ENV
          echo "Ballerina Version: $BAL_VERSION"

      - name: Set Up Ballerina
        uses: ballerina-platform/setup-ballerina@v1.1.0
        with:
          version: ${{ env.BAL_VERSION }}

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 21.0.3

      - name: Build the Package
        env:
          packageUser: ${{ github.actor }}
          packagePAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew :${{ inputs.hana-connector-group }}-examples:build :${{ inputs.hana-connector-group }}-sanitation:build -x :${{ inputs.hana-connector-group }}-ballerina:build

  generate-matrix:
    name: Generate Matrix
    runs-on: ubuntu-latest
    outputs:
      directories: ${{ steps.set-matrix.outputs.directories }}
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v3
      - name: Set matrix for build
        id: set-matrix
        run: |
          folders=()
          cd ballerina
          for dir in $(find . -type d -maxdepth 1  -mindepth 1 | cut -c3-); do
            if [[ "$dir" == resources ]]; then
              continue
            fi
            folders+=("$dir");
          done
          echo "directories=$(jq -nc --args '$ARGS.positional' ${folders[@]})" >> $GITHUB_OUTPUT

  build-connectors:
    name: Build Connectors
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      matrix:
        directory: ${{ fromJSON(needs.generate-matrix.outputs.directories) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 21.0.3

      - name: Build the Package
        env:
          packageUser: ${{ github.actor }}
          packagePAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew :${{ inputs.hana-connector-group }}-ballerina:${{ matrix.directory }}:build -x test -PbuildUsingDocker=nightly
          ./gradlew :${{ inputs.hana-connector-group }}-ballerina:${{ matrix.directory }}:test -PbuildUsingDocker=nightly

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.directory }}
          path: ballerina/**/coverage-report.xml

  upload-codcov:
    name: Upload Codecov
    runs-on: ubuntu-latest
    needs: build-connectors
    steps:
      - name: Download coverage reports
        uses: actions/download-artifact@v4

      - name: Generate CodeCov Report
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ballerina-platform/${{ github.event.repository.name }}
